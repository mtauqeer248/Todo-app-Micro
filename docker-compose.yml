version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: todo-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - todo-network

  user-service:
    build: ./user-service
    container_name: todo-user-service
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
    ports:
      - "${USER_SERVICE_PORT}:3001"
    depends_on:
      - postgres
    networks:
      - todo-network
    volumes:
      - ./user-service:/app
      - /app/node_modules

  todo-service:
    build: ./todo-service
    container_name: todo-todo-service
    env_file:
      - .env
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "${TODO_SERVICE_PORT}:3002"
    depends_on:
      - postgres
      - user-service
    networks:
      - todo-network
    volumes:
      - ./todo-service:/app
      - /app/node_modules

  frontend:
    build: ./frontend
    container_name: todo-frontend
    env_file:
      - .env
    environment:
      USER_SERVICE_URL: http://user-service:3001
      TODO_SERVICE_URL: http://todo-service:3002
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      - user-service
      - todo-service
    networks:
      - todo-network

volumes:
  postgres_data:

networks:
  todo-network:
    driver: bridge
